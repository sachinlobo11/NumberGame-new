
import org.json.*;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStreamReader;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.URL;

//import static java.util.concurrent.CompletableFuture.Delayer.delay;

public class Main {

    private static final java.util.logging.Logger log = java.util.logging.Logger.getLogger(com.sun.tools.javac.Main.class.getName());

    private static HttpURLConnection conn;
    public static void main(String[] args) {

        BufferedReader reader;
        String line;
        StringBuilder responseContent = new StringBuilder();
        try{
          //  URL url = new URL("https://api.openweathermap.org/data/2.5/weather?lat=12.74&lon=72.8&appid=b6f683b92a684ed1730a76d2038beb2b");
           URL url = new URL("https://jsonplaceholder.typicode.com/users");
            conn = (HttpURLConnection) url.openConnection();

            // Request setup
            conn.setRequestMethod("GET");
            conn.setConnectTimeout(5000);// 5000 milliseconds = 5 seconds
            conn.setReadTimeout(5000);

            // Test if the response from the server is successful
            int status = conn.getResponseCode();

            if (status >= 300) {
                reader = new BufferedReader(new InputStreamReader(conn.getErrorStream()));
                while ((line = reader.readLine()) != null) {
                    responseContent.append(line);
                }
                reader.close();

            }
            else {
                reader = new BufferedReader(new InputStreamReader(conn.getInputStream()));
                while ((line = reader.readLine()) != null) {
                    responseContent.append(line);
                }
                reader.close();
            }
            log.info("response code: " + status);
            System.out.println(responseContent);
            Thread.sleep(7000);
        }
        catch (MalformedURLException e) {
            e.printStackTrace();
        } catch (IOException e) {
            e.printStackTrace();
        } catch (InterruptedException e) {
            throw new RuntimeException(e);
        } finally {

            conn.disconnect();
        }
        parse(responseContent.toString());

    }



    public static String parse(String responseBody) {
        JSONArray albums = new JSONArray(responseBody);
        for (int i = 0 ; i < albums.length(); i++) {
            JSONObject album = albums.getJSONObject(i);

            int id = album.getInt("id");
            JSONObject address = album.getJSONObject("address");
            String title = address.getString("street");

            System.out.println(id+" "+title+" "+albums.length());
        }
        return null;
    }


}
